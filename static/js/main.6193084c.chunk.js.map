{"version":3,"sources":["sorter/selection.js","sorter/bubble.js","sorter/insertion.js","sorter/merge.js","ControllPanel.js","Visualizer.js","App.js","index.js"],"names":["maxNum","list","elem","bg","className","style","backgroundColor","width","Math","round","waitfor","t","Promise","resolve","setTimeout","disableControllPanel","bv","document","querySelector","disabled","selection","arr","setSortedArray","speed","a","array","max","i","map","indx","min","slice","length","minIndx","indexOf","bubble","j","maxIndx","index","insertion","unsorted","sorted","push","actuallPosition","undefined","mergeSort","divide","merge","lp","mp","rp","ivp","sortedArray","firstHalf","secondHalf","inc","k","console","log","floor","ControllPanel","setArray","action","type","placeholder","onKeyPress","event","test","key","preventDefault","onChange","input","target","value","split","num","parseInt","filter","isNaN","id","step","onClick","method","visualizer","fontSize","App","React","useState","ReactDOM","render","getElementById"],"mappings":"uJAAIA,E,oFAyCJ,SAASC,EAAKC,EAAMC,GAClB,OACE,oBACEC,UAAU,UACVC,MAAO,CACLC,gBAAiBH,EACjBI,MAAOC,KAAKC,MAAO,IAAMT,EAAUE,GAAQ,KAJ/C,SAOGA,IAIP,SAASQ,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTD,MACCF,MAGP,SAASI,EAAqBC,GAC5BC,SAASC,cAAc,gBAAgBC,SAAWH,EAClDC,SAASC,cAAc,QAAQC,SAAWH,EAG7BI,IClEXpB,EDkEWoB,EAjEF,uCAAG,WAAOC,EAAKC,EAAgBC,GAA5B,mBAAAC,EAAA,sDACVC,EADU,YACEJ,GAChBN,GAAqB,GACrBf,EAASQ,KAAKkB,IAAL,MAAAlB,KAAI,YAAQiB,IAHP,IAAAD,EAAA,iBAKLG,GALK,iBAAAH,EAAA,6DAOZF,EACEG,EAAMG,KAAI,SAAC1B,EAAM2B,GAAP,OAAiBA,GAAQF,EAAI1B,EAAKC,EAAM,UAAYD,EAAKC,OARzD,SAYNQ,EAAQa,GAZF,cAeRO,EAAMtB,KAAKsB,IAAL,MAAAtB,KAAI,YAAQiB,EAAMM,MAAMJ,EAAGF,EAAMO,UACvCC,EAAUN,EAAIF,EAAMM,MAAMJ,EAAGF,EAAMO,QAAQE,QAAQJ,GAGvDR,EACEG,EAAMG,KAAI,SAAC1B,EAAM2B,GAAP,OACRA,GAAQF,EAEF1B,EAAKC,EADP2B,IAASI,EACI,MACA,UACbhC,EAAKC,OAzBD,SA8BNQ,EAAQa,EAAQ,MAAQ,EAAI,GAAKA,EAAQ,KA9BnC,OAiCZE,EAAMQ,GAAWR,EAAME,GACvBF,EAAME,GAAKG,EAlCC,2CAKLH,EAAI,EALC,YAKEA,EAAIF,EAAMO,QALZ,0CAKLL,GALK,eAKoBA,IALpB,uBAoCdL,EAAeG,EAAMG,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,OACxCa,GAAqB,GArCP,4CAAH,0DC+Cb,SAASd,EAAKC,EAAMC,GAClB,OACE,oBACEC,UAAU,UACVC,MAAO,CACLC,gBAAiBH,EACjBI,MAAOC,KAAKC,MAAO,IAAMT,EAAUE,GAAQ,KAJ/C,SAOGA,IAIP,SAASQ,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTD,MACCF,MAGP,SAASI,EAAqBC,GAC5BC,SAASC,cAAc,gBAAgBC,SAAWH,EAClDC,SAASC,cAAc,QAAQC,SAAWH,EAG7BmB,ICzEXnC,EDyEWmC,EAvEL,uCAAG,WAAOd,EAAKC,EAAgBC,GAA5B,qBAAAC,EAAA,sDACPC,EADO,YACKJ,GAChBN,GAAqB,GACrBf,EAASQ,KAAKkB,IAAL,MAAAlB,KAAI,YAAQiB,IAEZE,EAAI,EALF,YAKKA,EAAIF,EAAMO,OAAS,GALxB,qBAAAR,EAAA,iBAMAY,GANA,iBAAAZ,EAAA,6DAQPF,EACEG,EAAMG,KAAI,SAAC1B,EAAM2B,GAAP,OACRA,IAASO,GAAKP,IAASO,EAAI,EAAInC,EAAKC,EAAM,UAAYD,EAAKC,OAVxD,SAeDQ,EAAQa,GAfP,cAkBHG,EAAMlB,KAAKkB,IAAID,EAAMW,GAAIX,EAAMW,EAAI,IACnCC,EAAUD,EAAIX,EAAMM,MAAMK,EAAGX,EAAMa,OAAOJ,QAAQR,GAGtDJ,EACEG,EAAMG,KAAI,SAAC1B,EAAM2B,GAAP,OACRA,IAASO,GAAKP,IAASO,EAAI,EAErBnC,EAAKC,EADP2B,IAASQ,EACI,MACA,UACbpC,EAAKC,OA5BN,SAiCDQ,EAAQa,EAAQ,MAAQ,EAAI,GAAKA,EAAQ,KAjCxC,OAoCHa,IAAMC,IACRZ,EAAMW,GAAKX,EAAMW,EAAI,GACrBX,EAAMW,EAAI,GAAKV,GAtCV,0CAMAU,EAAI,EANJ,YAMOA,EAAIX,EAAMO,OAASL,EAAI,GAN9B,0CAMAS,GANA,eAMiCA,IANjC,uBAyCTd,EAAeG,EAAMG,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,OAzC/B,QAK2ByB,IAL3B,uBA2CXZ,GAAqB,GA3CV,4CAAH,0DC+DV,SAASd,EAAKC,EAAMC,GAClB,OACE,oBACEC,UAAU,UACVC,MAAO,CACLC,gBAAiBH,EACjBI,MAAOC,KAAKC,MAAO,IAAMT,EAAUE,GAAQ,KAJ/C,SAOGA,IAIP,SAASQ,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTD,MACCF,MAGP,SAASI,EAAqBC,GAC5BC,SAASC,cAAc,gBAAgBC,SAAWH,EAClDC,SAASC,cAAc,QAAQC,SAAWH,EAG7BuB,IC1FXvC,ED0FWuC,EAzFF,uCAAG,WAAOd,EAAOH,EAAgBC,GAA9B,mBAAAC,EAAA,6DACdT,GAAqB,GACrBf,EAASQ,KAAKkB,IAAL,MAAAlB,KAAI,YAAQiB,IAGjBe,EAAW,IADXC,EAAS,IAENC,KAAKjB,EAAM,IAClBe,EAAQ,YAAOf,EAAMM,MAAM,EAAGN,EAAMO,SAGpCV,EAAe,GAAD,mBACTmB,EAAOb,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,OADjB,YAETsC,EAASZ,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,EAAM,gBAZzB,SAgBRQ,EAAQa,EAAQ,KAAO,EAAI,GAAKA,EAAQ,KAhBhC,WAAAC,EAAA,oCAAAA,EAAA,sDA6BZ,IATImB,OApBQ,EAuBZrB,EAAe,GAAD,mBACTmB,EAAOb,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,OADjB,YAETsC,EAASZ,KAAI,SAAC1B,EAAM2B,GAAP,OACD5B,EAAKC,EAAT,IAAT2B,EAAwB,MAAoB,gBAGvCF,EAAIc,EAAOT,OAAS,EAAGL,GAAK,EAAGA,IAClCc,EAAOd,GAAKa,EAAS,KACvBG,EAAkBhB,EAClBc,EAAOd,EAAI,GAAKc,EAAOd,IAhCf,YAmCQiB,IAApBD,EACKF,EAAOA,EAAOT,QAAUQ,EAAS,GACjCC,EAAOE,GAAmBH,EAAS,GACxCA,EAAWA,EAAST,MAAM,EAAGS,EAASR,QAtC1B,SAyCNtB,EAAQa,GAzCF,cA4CZD,EAAe,GAAD,mBACTmB,EAAOb,KAAI,SAAC1B,EAAM2B,GACnB,YAAwBe,IAApBD,EACKd,IAASY,EAAOT,OAAS,EAAI/B,EAAKC,EAAM,QAAUD,EAAKC,GACpD2B,IAASc,EAAkB1C,EAAKC,EAAM,QAAUD,EAAKC,OAJvD,YAMTsC,EAASZ,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,EAAM,gBAlD3B,UAsDNQ,EAAQa,EAAQ,KAAO,EAAI,IAAMA,EAAQ,KAtDnC,wDAmBPiB,EAASR,OAAS,GAnBX,qFA0DdV,EAAe,YAAImB,EAAOb,KAAI,SAAC1B,GAAD,OAAUD,EAAKC,QAG7Ca,GAAqB,GA7DP,4CAAH,0DCkFb,SAASd,EAAKC,EAAMC,GAClB,OACE,oBACEC,UAAU,UACVC,MAAO,CACLC,gBAAiBH,EACjBI,MAAOC,KAAKC,MAAO,IAAMT,EAAUE,GAAQ,KAJ/C,SAOGA,IAKP,SAASa,IAAiC,IAAZC,IAAW,yDACvCC,SAASC,cAAc,gBAAgBC,SAAWH,EAClDC,SAASC,cAAc,QAAQC,SAAWH,EAE7B6B,MAnGF,uCAAG,WAAOxB,EAAKC,EAAgBC,GAA5B,QAQCuB,EARD,EAmBCC,EAnBD,WAAAvB,EAAA,0FAAAA,EAAA,MAmBd,WAAqBC,EAAOuB,EAAIC,EAAIC,GAApC,+BAAA1B,EAAA,sDAkBE,IAjBI2B,EAAMH,EACNI,EAAc,GACdzB,EAAI,EACJS,EAAI,EACJiB,EAAY5B,EAAMM,MAAMiB,EAAIC,EAAK,GACjCK,EAAa7B,EAAMM,MAAMkB,EAAK,EAAGC,EAAK,GAGtCV,EATN,YASqBf,GACnBX,YAAW,WACTQ,EACEkB,EAASZ,KAAI,SAAC1B,EAAM2B,GAAP,OACXA,GAAQsB,GAAOtB,GAAQqB,EAAKjD,EAAKC,EAAM,UAAYD,EAAKC,SAG3DqD,IAAQhC,GAEJI,EAAI0B,EAAUrB,QAAUI,EAAIkB,EAAWtB,QACxCqB,EAAU1B,GAAK2B,EAAWlB,IAC5BgB,EAAYV,KAAKW,EAAU1B,IAC3BA,MAEAyB,EAAYV,KAAKY,EAAWlB,IAC5BA,KAGJ,KAAOT,EAAI0B,EAAUrB,QACnBoB,EAAYV,KAAKW,EAAU1B,IAC3BA,IAEF,KAAOS,EAAIkB,EAAWtB,QACpBoB,EAAYV,KAAKY,EAAWlB,IAC5BA,IAEF,IAASoB,EAAI,EAAGA,EAAIJ,EAAYpB,OAAQwB,IACtC/B,EAAMuB,GAAMI,EAAYI,GACxBR,IAIEP,EAzCN,YAyCmBhB,GACjBX,YAAW,WACTQ,EACEmB,EAAOb,KAAI,SAAC1B,EAAM2B,GAAP,OACTqB,EAAKC,GAAO1B,EAAMO,OAAS,EACvB/B,EAAKC,GACL2B,GAAQsB,GAAOtB,GAAQqB,EACvBjD,EAAKC,EAAM,QACXD,EAAKC,SAGZqD,IAAQhC,GACXkC,QAAQC,IAAIH,GArDd,6CAnBc,uBAmBCR,EAnBD,sFAAAvB,EAAA,MAQd,WAAsBC,GAAtB,+BAAAD,EAAA,sDAA6BwB,EAA7B,+BAAkC,EAAGE,EAArC,+BAA0CzB,EAAMO,OAAS,EACnDgB,EAAKE,IACHD,EAAKzC,KAAKmD,OAAOX,EAAKE,GAAM,GAEhCJ,EAAOrB,EAAOuB,EAAIC,GAClBH,EAAOrB,EAAOwB,EAAK,EAAGC,GACtBH,EAAMtB,EAAOuB,EAAIC,EAAIC,IANzB,4CARc,uBAQCJ,EARD,4CACVS,EAAM,EACN9B,EAFU,YAEEJ,GAChBN,GAAqB,GACrBf,EAASQ,KAAKkB,IAAL,MAAAlB,KAAI,YAAQiB,IAGrBqB,EAAOrB,GAqEPX,YAAW,WACTC,GAAqB,KACC,GAApBU,EAAMO,OAAS,GAAST,EAAQA,GA9EtB,4CAAH,0DCIE,SAASqC,EAAT,GAA6D,IAApCnC,EAAmC,EAAnCA,MAAOoC,EAA4B,EAA5BA,SAAUvC,EAAkB,EAAlBA,eA4BvD,OACE,uBAAMlB,UAAU,iBAAiB0D,OAAO,SAAxC,UACE,uBACEC,KAAK,OACL3D,UAAU,cACV4D,YAAY,kBACZC,WAVN,SAA2BC,GACpB,OAAOC,KAAKD,EAAME,MAAMF,EAAMG,kBAU/BC,SAnBN,SAA0BJ,GACxB5C,EAAe,IACf,IAAIiD,EAAQL,EAAMM,OAAOC,MAAMC,MAAM,KAChC,KAAKP,KAAKI,IAEbV,EAASU,EAAM3C,KAAI,SAAC+C,GAAD,OAASC,SAASD,MAAME,QAAO,SAACF,GAAD,OAAUG,MAAMH,UAgBlE,yBAAQvE,UAAU,sBAAlB,UACE,wBAAQqE,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,sBAEF,sBAAKrE,UAAU,mBAAf,UACE,uBAAO2E,GAAG,QAAQhB,KAAK,QAAQjC,IAAI,KAAKJ,IAAI,OAAOsD,KAAK,QACxD,sBAAK5E,UAAU,cAAf,UACE,sBAAMA,UAAU,OAAhB,kBACA,sBAAMA,UAAU,OAAhB,qBACA,sBAAMA,UAAU,OAAhB,wBAGJ,wBAAQA,UAAU,MAAM6E,QAlD5B,SAA2Bf,GACzBA,EAAMG,iBACN,IAAIa,EAASjE,SAASC,cAAc,wBAAwBuD,MACxDlD,EAAQN,SAASC,cAAc,UAAUuD,MAC9B,cAAXS,EACF9D,EAAUK,EAAOH,EAAgBC,GACb,WAAX2D,EACT/C,EAAOV,EAAOH,EAAgBC,GACV,cAAX2D,EACT3C,EAAUd,EAAOH,EAAgBC,GACb,UAAX2D,GACTnC,EAAMtB,EAAOH,EAAgBC,IAuC7B,qBCvDS,SAAS4D,EAAT,GAA6C,IAAvB1D,EAAsB,EAAtBA,MAAO2B,EAAe,EAAfA,YACtCpD,EAASQ,KAAKkB,IAAL,MAAAlB,KAAI,YAAQiB,IACzB,OAAI2B,EAAYpB,OAAS,EAErB,qBAAK5B,UAAU,aAAf,SACE,6BAAKgD,MAIe,IAAjB3B,EAAMO,OACV8C,MAAMrD,EAAM,IAiBX,oBAAIpB,MAAO,CAAE+E,SAAU,QAAvB,6BAhBA,qBAAKhF,UAAU,aAAf,SACE,6BACGqB,EAAMG,KAAI,SAAC+C,EAAK9C,GACf,OACE,oBAEEzB,UAAU,UACVC,MAAO,CAAEE,MAAOC,KAAKC,MAAO,IAAMT,EAAU2E,GAAO,KAHrD,SAKGA,GAJI9C,UAcjB,oBAAIxB,MAAO,CAAE+E,SAAU,QAAvB,6BCXSC,MAhBf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACN9D,EADM,KACCoC,EADD,OAEyByB,IAAMC,SAAS,IAFxC,mBAENnC,EAFM,KAEO9B,EAFP,KAIb,OACE,sBAAKlB,UAAU,MAAf,UACE,cAACwD,EAAD,CACEnC,MAAOA,EACPoC,SAAUA,EACVvC,eAAgBA,IAElB,cAAC,EAAD,CAAYG,MAAOA,EAAO2B,YAAaA,QCZ7CoC,IAASC,OAAO,cAAC,EAAD,IAASxE,SAASyE,eAAe,W","file":"static/js/main.6193084c.chunk.js","sourcesContent":["let maxNum;\r\nlet selection = async (arr, setSortedArray, speed) => {\r\n  let array = [...arr];\r\n  disableControllPanel(true);\r\n  maxNum = Math.max(...array);\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    //highlite the elements those are under consideration\r\n    setSortedArray(\r\n      array.map((elem, indx) => (indx >= i ? list(elem, \"tomato\") : list(elem)))\r\n    );\r\n\r\n    //waite for animation\r\n    await waitfor(speed);\r\n\r\n    //finding the minimum\r\n    let min = Math.min(...array.slice(i, array.length));\r\n    let minIndx = i + array.slice(i, array.length).indexOf(min);\r\n\r\n    //highlite the minimum element\r\n    setSortedArray(\r\n      array.map((elem, indx) =>\r\n        indx >= i\r\n          ? indx === minIndx\r\n            ? list(elem, \"red\")\r\n            : list(elem, \"tomato\")\r\n          : list(elem)\r\n      )\r\n    );\r\n\r\n    //waite for animation\r\n    await waitfor(speed - 500 === 0 ? 50 : speed - 500);\r\n\r\n    //swap the minimum with array[i]\r\n    array[minIndx] = array[i];\r\n    array[i] = min;\r\n  }\r\n  setSortedArray(array.map((elem) => list(elem)));\r\n  disableControllPanel(false);\r\n};\r\n\r\nfunction list(elem, bg) {\r\n  return (\r\n    <li\r\n      className=\"num-bar\"\r\n      style={{\r\n        backgroundColor: bg,\r\n        width: Math.round((100 / maxNum) * elem) + \"%\",\r\n      }}\r\n    >\r\n      {elem}\r\n    </li>\r\n  );\r\n}\r\nfunction waitfor(t) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, t);\r\n  });\r\n}\r\nfunction disableControllPanel(bv) {\r\n  document.querySelector(\".array-taker\").disabled = bv;\r\n  document.querySelector(\".btn\").disabled = bv;\r\n}\r\n\r\nexport default selection;\r\n","let maxNum;\r\n\r\nlet bubble = async (arr, setSortedArray, speed) => {\r\n  let array = [...arr];\r\n  disableControllPanel(true);\r\n  maxNum = Math.max(...array);\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      //highlite the elements those are under consideration\r\n      setSortedArray(\r\n        array.map((elem, indx) =>\r\n          indx === j || indx === j + 1 ? list(elem, \"tomato\") : list(elem)\r\n        )\r\n      );\r\n\r\n      //waite for animation\r\n      await waitfor(speed);\r\n\r\n      //finding the max\r\n      let max = Math.max(array[j], array[j + 1]);\r\n      let maxIndx = j + array.slice(j, array.index).indexOf(max);\r\n\r\n      //highlite the max element\r\n      setSortedArray(\r\n        array.map((elem, indx) =>\r\n          indx === j || indx === j + 1\r\n            ? indx === maxIndx\r\n              ? list(elem, \"red\")\r\n              : list(elem, \"tomato\")\r\n            : list(elem)\r\n        )\r\n      );\r\n\r\n      //waite for animation\r\n      await waitfor(speed - 500 === 0 ? 50 : speed - 500);\r\n\r\n      //swap the max\r\n      if (j === maxIndx) {\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = max;\r\n      }\r\n    }\r\n    setSortedArray(array.map((elem) => list(elem)));\r\n  }\r\n  disableControllPanel(false);\r\n};\r\n\r\nfunction list(elem, bg) {\r\n  return (\r\n    <li\r\n      className=\"num-bar\"\r\n      style={{\r\n        backgroundColor: bg,\r\n        width: Math.round((100 / maxNum) * elem) + \"%\",\r\n      }}\r\n    >\r\n      {elem}\r\n    </li>\r\n  );\r\n}\r\nfunction waitfor(t) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, t);\r\n  });\r\n}\r\nfunction disableControllPanel(bv) {\r\n  document.querySelector(\".array-taker\").disabled = bv;\r\n  document.querySelector(\".btn\").disabled = bv;\r\n}\r\n\r\nexport default bubble;\r\n","let maxNum;\r\nlet insertion = async (array, setSortedArray, speed) => {\r\n  disableControllPanel(true);\r\n  maxNum = Math.max(...array);\r\n  //split the array into two\r\n  let sorted = [];\r\n  let unsorted = [];\r\n  sorted.push(array[0]);\r\n  unsorted = [...array.slice(1, array.length)];\r\n\r\n  //visualize the splited two part\r\n  setSortedArray([\r\n    ...sorted.map((elem) => list(elem)),\r\n    ...unsorted.map((elem) => list(elem, \"tomato\")),\r\n  ]);\r\n\r\n  //wait for visualization\r\n  await waitfor(speed - 500 <= 0 ? 50 : speed - 500);\r\n\r\n  //sorting start\r\n  while (unsorted.length > 0) {\r\n    let actuallPosition;\r\n\r\n    //visualize the considering element with red background\r\n    setSortedArray([\r\n      ...sorted.map((elem) => list(elem)),\r\n      ...unsorted.map((elem, indx) =>\r\n        indx === 0 ? list(elem, \"red\") : list(elem, \"tomato\")\r\n      ),\r\n    ]);\r\n    for (let i = sorted.length - 1; i >= 0; i--) {\r\n      if (sorted[i] > unsorted[0]) {\r\n        actuallPosition = i;\r\n        sorted[i + 1] = sorted[i];\r\n      }\r\n    }\r\n    actuallPosition === undefined\r\n      ? (sorted[sorted.length] = unsorted[0])\r\n      : (sorted[actuallPosition] = unsorted[0]);\r\n    unsorted = unsorted.slice(1, unsorted.length);\r\n\r\n    //wait for visualization\r\n    await waitfor(speed);\r\n\r\n    //visualize the updated position of considering element with pink background\r\n    setSortedArray([\r\n      ...sorted.map((elem, indx) => {\r\n        if (actuallPosition === undefined)\r\n          return indx === sorted.length - 1 ? list(elem, \"pink\") : list(elem);\r\n        else return indx === actuallPosition ? list(elem, \"pink\") : list(elem);\r\n      }),\r\n      ...unsorted.map((elem) => list(elem, \"tomato\")),\r\n    ]);\r\n\r\n    //wait for visualization\r\n    await waitfor(speed - 500 <= 0 ? 200 : speed - 500);\r\n  }\r\n\r\n  //visualize the final sorted array\r\n  setSortedArray([...sorted.map((elem) => list(elem))]);\r\n\r\n  //enable the array-taker input-bpx and submit button\r\n  disableControllPanel(false);\r\n};\r\n\r\nfunction list(elem, bg) {\r\n  return (\r\n    <li\r\n      className=\"num-bar\"\r\n      style={{\r\n        backgroundColor: bg,\r\n        width: Math.round((100 / maxNum) * elem) + \"%\",\r\n      }}\r\n    >\r\n      {elem}\r\n    </li>\r\n  );\r\n}\r\nfunction waitfor(t) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, t);\r\n  });\r\n}\r\nfunction disableControllPanel(bv) {\r\n  document.querySelector(\".array-taker\").disabled = bv;\r\n  document.querySelector(\".btn\").disabled = bv;\r\n}\r\n\r\nexport default insertion;\r\n","let maxNum;\r\n\r\nlet mergeSort = async (arr, setSortedArray, speed) => {\r\n  let inc = 0;\r\n  let array = [...arr];\r\n  disableControllPanel(true);\r\n  maxNum = Math.max(...array);\r\n\r\n  //call divider function to divide array recursively\r\n  divide(array);\r\n  async function divide(array, lp = 0, rp = array.length - 1) {\r\n    if (lp < rp) {\r\n      let mp = Math.floor((lp + rp) / 2);\r\n\r\n      divide(array, lp, mp);\r\n      divide(array, mp + 1, rp);\r\n      merge(array, lp, mp, rp);\r\n    }\r\n  }\r\n\r\n  //concure the divided array to form sorted one\r\n  async function merge(array, lp, mp, rp) {\r\n    let ivp = lp; //initial visual point\r\n    let sortedArray = [];\r\n    let i = 0;\r\n    let j = 0;\r\n    let firstHalf = array.slice(lp, mp + 1);\r\n    let secondHalf = array.slice(mp + 1, rp + 1);\r\n\r\n    //visualization of unsorted part going to be sorted\r\n    let unsorted = [...array];\r\n    setTimeout(() => {\r\n      setSortedArray(\r\n        unsorted.map((elem, indx) =>\r\n          indx >= ivp && indx <= rp ? list(elem, \"tomato\") : list(elem)\r\n        )\r\n      );\r\n    }, inc++ * speed);\r\n\r\n    while (i < firstHalf.length && j < secondHalf.length) {\r\n      if (firstHalf[i] < secondHalf[j]) {\r\n        sortedArray.push(firstHalf[i]);\r\n        i++;\r\n      } else {\r\n        sortedArray.push(secondHalf[j]);\r\n        j++;\r\n      }\r\n    }\r\n    while (i < firstHalf.length) {\r\n      sortedArray.push(firstHalf[i]);\r\n      i++;\r\n    }\r\n    while (j < secondHalf.length) {\r\n      sortedArray.push(secondHalf[j]);\r\n      j++;\r\n    }\r\n    for (let k = 0; k < sortedArray.length; k++) {\r\n      array[lp] = sortedArray[k];\r\n      lp++;\r\n    }\r\n\r\n    //visualization of sorted part\r\n    let sorted = [...array];\r\n    setTimeout(() => {\r\n      setSortedArray(\r\n        sorted.map((elem, indx) =>\r\n          rp - ivp == array.length - 1\r\n            ? list(elem)\r\n            : indx >= ivp && indx <= rp\r\n            ? list(elem, \"pink\")\r\n            : list(elem)\r\n        )\r\n      );\r\n    }, inc++ * speed);\r\n    console.log(inc);\r\n  }\r\n\r\n  //enable controll-panel after sorting\r\n  setTimeout(() => {\r\n    disableControllPanel(false);\r\n  }, (array.length - 1) * 2 * speed - speed);\r\n};\r\n\r\nfunction list(elem, bg) {\r\n  return (\r\n    <li\r\n      className=\"num-bar\"\r\n      style={{\r\n        backgroundColor: bg,\r\n        width: Math.round((100 / maxNum) * elem) + \"%\",\r\n      }}\r\n    >\r\n      {elem}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction disableControllPanel(bv = true) {\r\n  document.querySelector(\".array-taker\").disabled = bv;\r\n  document.querySelector(\".btn\").disabled = bv;\r\n}\r\nexport default mergeSort;\r\n","import React from \"react\";\r\nimport selection from \"./sorter/selection\";\r\nimport bubble from \"./sorter/bubble\";\r\nimport insertion from \"./sorter/insertion\";\r\nimport merge from \"./sorter/merge\";\r\n\r\nexport default function ControllPanel({ array, setArray, setSortedArray }) {\r\n  function submissionHandler(event) {\r\n    event.preventDefault();\r\n    let method = document.querySelector(\".sortmethod-selector\").value;\r\n    let speed = document.querySelector(\"#speed\").value;\r\n    if (method === \"selection\") {\r\n      selection(array, setSortedArray, speed);\r\n    } else if (method === \"bubble\") {\r\n      bubble(array, setSortedArray, speed);\r\n    } else if (method === \"insertion\") {\r\n      insertion(array, setSortedArray, speed);\r\n    } else if (method === \"merge\") {\r\n      merge(array, setSortedArray, speed);\r\n    }\r\n  }\r\n\r\n  function arrayIputHandler(event) {\r\n    setSortedArray([]);\r\n    let input = event.target.value.split(\",\");\r\n    if (!/,$/.test(input)) {\r\n      // setArray(input.map((num) => parseInt(num)));\r\n      setArray(input.map((num) => parseInt(num)).filter((num) => !isNaN(num)));\r\n    }\r\n  }\r\n  function arrayInputChacker(event) {\r\n    if (!/\\d|,/.test(event.key)) event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <form className=\"controll-panel\" action=\"/sdsdg\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"array-taker\"\r\n        placeholder=\"45,7,56,12,26,9\"\r\n        onKeyPress={arrayInputChacker}\r\n        onChange={arrayIputHandler}\r\n      />\r\n      <select className=\"sortmethod-selector\">\r\n        <option value=\"selection\">selection</option>\r\n        <option value=\"bubble\">bubble</option>\r\n        <option value=\"insertion\">insertion</option>\r\n        <option value=\"merge\">merge</option>\r\n      </select>\r\n      <div className=\"speed-controller\">\r\n        <input id=\"speed\" type=\"range\" min=\"10\" max=\"4010\" step=\"100\" />\r\n        <div className=\"speed-ticks\">\r\n          <span className=\"tick\">fast</span>\r\n          <span className=\"tick\">regular</span>\r\n          <span className=\"tick\">slow</span>\r\n        </div>\r\n      </div>\r\n      <button className=\"btn\" onClick={submissionHandler}>\r\n        sort\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function visualizer({ array, sortedArray }) {\r\n  let maxNum = Math.max(...array);\r\n  if (sortedArray.length > 0) {\r\n    return (\r\n      <div className=\"visualizer\">\r\n        <ul>{sortedArray}</ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return array.length !== 0 ? (\r\n      !isNaN(array[0]) ? (\r\n        <div className=\"visualizer\">\r\n          <ul>\r\n            {array.map((num, indx) => {\r\n              return (\r\n                <li\r\n                  key={indx}\r\n                  className=\"num-bar\"\r\n                  style={{ width: Math.round((100 / maxNum) * num) + \"%\" }}\r\n                >\r\n                  {num}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <h2 style={{ fontSize: \"30px\" }}>put some number</h2>\r\n      )\r\n    ) : (\r\n      <h2 style={{ fontSize: \"30px\" }}>put some number</h2>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ControllPanel from \"./ControllPanel\";\nimport Visualizer from \"./Visualizer\";\n\nfunction App() {\n  const [array, setArray] = React.useState([]);\n  const [sortedArray, setSortedArray] = React.useState([]);\n\n  return (\n    <div className=\"App\">\n      <ControllPanel\n        array={array}\n        setArray={setArray}\n        setSortedArray={setSortedArray}\n      />\n      <Visualizer array={array} sortedArray={sortedArray} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}